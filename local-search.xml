<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>计算机硬件介绍</title>
    <link href="/2022/06/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%E4%BB%8B%E7%BB%8D/"/>
    <url>/2022/06/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%E4%BB%8B%E7%BB%8D/</url>
    
    <content type="html"><![CDATA[<h1 id="计算机硬件介绍"><a href="#计算机硬件介绍" class="headerlink" title="计算机硬件介绍"></a>计算机硬件介绍</h1><h2 id="中央处理器："><a href="#中央处理器：" class="headerlink" title="-中央处理器："></a>-中央处理器：</h2><p>​是计算机的大脑。它从内存中获取指令，然后执行这些指令。</p><h3 id="包括："><a href="#包括：" class="headerlink" title="包括："></a>包括：</h3><p>​控制单元和算术&#x2F;逻辑单元</p><h4 id="控制单元："><a href="#控制单元：" class="headerlink" title="控制单元："></a>控制单元：</h4><p>​用于协调和控制其他组件的动作</p><h4 id="算术逻辑单"><a href="#算术逻辑单" class="headerlink" title="算术逻辑单:"></a>算术逻辑单:</h4><p>​用于完成运算</p><p>每台计算机都有一个内部时钟，该时钟以固定速度发射电子脉冲。时钟速度越快，在给定时间段内执行的指令越多。速度的计算单位是赫兹（Hz）</p><h1 id="IT定律之行业发展定律"><a href="#IT定律之行业发展定律" class="headerlink" title="IT定律之行业发展定律"></a>IT定律之行业发展定律</h1><h2 id="摩尔定律"><a href="#摩尔定律" class="headerlink" title="摩尔定律"></a>摩尔定律</h2><h2 id="安迪-比尔定律"><a href="#安迪-比尔定律" class="headerlink" title="安迪-比尔定律"></a>安迪-比尔定律</h2><h2 id="反摩尔定律"><a href="#反摩尔定律" class="headerlink" title="反摩尔定律"></a>反摩尔定律</h2><h1 id="计算机硬件硬件介绍-存储设备"><a href="#计算机硬件硬件介绍-存储设备" class="headerlink" title="计算机硬件硬件介绍-存储设备"></a>计算机硬件硬件介绍-存储设备</h1><p>​                  </p>]]></content>
    
    
    <categories>
      
      <category>JavaStudy</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>常用DOS命令</title>
    <link href="/2022/06/25/%E5%B8%B8%E7%94%A8DOS%E5%91%BD%E4%BB%A4/"/>
    <url>/2022/06/25/%E5%B8%B8%E7%94%A8DOS%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="常用DOS命令"><a href="#常用DOS命令" class="headerlink" title="常用DOS命令"></a>常用DOS命令</h1><p>​&gt;dir:列出当前目录下的文件及其文件夹</p><p>​&gt;md:创建目录</p><p>​&gt;rd:删除目录</p><p>​&gt;cd:进入指定目录</p><p>​&gt;cd..:退回到上一级目录</p><p>​&gt;cd:退回到根目录</p><p>​&gt;del:删除文件</p><p>​&gt;exit:退出dos命令行</p><h1 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h1><p>Delete和Backspace:删除字符</p>]]></content>
    
    
    <categories>
      
      <category>JavaStudy</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>java注释</title>
    <link href="/2022/06/25/java%E6%B3%A8%E9%87%8A%EF%BC%9A/"/>
    <url>/2022/06/25/java%E6%B3%A8%E9%87%8A%EF%BC%9A/</url>
    
    <content type="html"><![CDATA[<h1 id="java注释："><a href="#java注释：" class="headerlink" title="java注释："></a>java注释：</h1><h2 id="1、单行注释"><a href="#1、单行注释" class="headerlink" title="1、单行注释"></a>1、单行注释</h2><h2 id="2、多行注释"><a href="#2、多行注释" class="headerlink" title="2、多行注释"></a>2、多行注释</h2><p>不可以嵌套使用</p><p>可以加单行注释</p><h2 id="3、文档注释："><a href="#3、文档注释：" class="headerlink" title="3、文档注释："></a>3、文档注释：</h2><p>​注释内容可以被jdk提供的工具javadoc解析，生成一套以网页文件形式体现的该程序的说明文档</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">……</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment">对第一个java程序进行总结</span><br><span class="hljs-comment">1.java程序编写-编译-运行的过程</span><br><span class="hljs-comment">编写：我们将编写的java代码保存再以&quot;.java&quot;结尾的源文件中</span><br><span class="hljs-comment">编译：使用javac.exe命令编译我们的java源文件。格式：javac 源文件名.java</span><br><span class="hljs-comment">运行：使用java.exe命令解释运行我们的字节码文件。格式：java 类名</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">2.</span><br><span class="hljs-comment">在一个java源文件中可以声明多个class。但是,只能最多有一个类声明为public</span><br><span class="hljs-comment">而且要求声明为public的类的类名必须与源文件名相同。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">3.程序的入口是main()方法。格式是固定的。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">4.输出语句：</span><br><span class="hljs-comment">System.out.println();//先输出后换行</span><br><span class="hljs-comment">System.out.print();只输出数据不换行 </span><br><span class="hljs-comment"></span><br><span class="hljs-comment">5.每一个执行语句都以一个&quot;;&quot;结束。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">6.编译的过程：</span><br><span class="hljs-comment">编译以后,会生成一个或多个字节码文件,字节码文件的文件名与jajva源文件中的类名相同。</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Hello</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<span class="hljs-comment">//arguments：参数</span><br>System.out.println(<span class="hljs-string">&quot;Hello World!&quot;</span>);<br>System.out.println(<span class="hljs-string">&quot;Hello World!&quot;</span>);<br>&#125;<br>&#125;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span>&#123;<br><br>&#125;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Animal</span>&#123;<br><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaStudy</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>day03--运算符</title>
    <link href="/2022/06/25/day03--%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <url>/2022/06/25/day03--%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
    
    <content type="html"><![CDATA[<h1 id="day03"><a href="#day03" class="headerlink" title="day03"></a>day03</h1><h2 id="2-4运算符"><a href="#2-4运算符" class="headerlink" title="2-4运算符"></a>2-4运算符</h2><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><table><thead><tr><th>运算符</th><th>运算</th><th>范例</th><th>结果</th></tr></thead><tbody><tr><td>+</td><td>正号</td><td>+3</td><td>3</td></tr><tr><td>-</td><td>负号</td><td>b&#x3D;4，-b</td><td>-4</td></tr><tr><td>+</td><td>加</td><td>5+5</td><td>10</td></tr><tr><td>-</td><td>减</td><td>6-4</td><td>2</td></tr><tr><td>*</td><td>乘</td><td>3*4</td><td>12</td></tr><tr><td>&#x2F;</td><td>除</td><td>4&#x2F;2</td><td>2</td></tr><tr><td>%</td><td>取模</td><td>7%5</td><td>2</td></tr><tr><td>++</td><td></td><td>a&#x3D;2，a++</td><td>3</td></tr><tr><td>++</td><td></td><td>a&#x3D;2，++a</td><td>3</td></tr><tr><td>–</td><td></td><td></td><td></td></tr><tr><td>–</td><td></td><td></td><td></td></tr><tr><td>+</td><td></td><td></td><td></td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment">运算符之一：算术运算符</span><br><span class="hljs-comment">+ - + - * / % （前）++（后）++（前）--（后）-- +</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">AriTest</span> &#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br><span class="hljs-comment">//除号：/</span><br><span class="hljs-type">int</span> <span class="hljs-variable">num1</span> <span class="hljs-operator">=</span> <span class="hljs-number">12</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">num2</span> <span class="hljs-operator">=</span> <span class="hljs-number">5</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">result1</span> <span class="hljs-operator">=</span> num1 / num2;<br>System.out.println(result1);<br><br><span class="hljs-type">int</span> <span class="hljs-variable">result2</span> <span class="hljs-operator">=</span> num1/ num2 * num2;<br>System.out.println(result2);<br><br><span class="hljs-type">double</span> <span class="hljs-variable">result3</span> <span class="hljs-operator">=</span> num1 / num2;<br>System.out.println(result3);<br><br><span class="hljs-type">double</span> <span class="hljs-variable">result4</span> <span class="hljs-operator">=</span> num1 * <span class="hljs-number">1.0</span> / num2;<br>System.out.println(result4);<br><br><span class="hljs-comment">//%：取余运算</span><br><span class="hljs-comment">//结果的符号与被模数的符号相同</span><br><span class="hljs-comment">//开发中，经常使用%来判断能否除尽的情况</span><br><span class="hljs-type">int</span> <span class="hljs-variable">m1</span> <span class="hljs-operator">=</span> <span class="hljs-number">12</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">n1</span> <span class="hljs-operator">=</span> <span class="hljs-number">5</span>;<br>System.out.println(<span class="hljs-string">&quot;m1 % n1 = &quot;</span> + m1 % n1);<br><br><span class="hljs-comment">//（前）++:先自增，后运算</span><br><span class="hljs-comment">//（后）++：先运算，后自增</span><br><span class="hljs-comment">//自增不会改变变量的数据类型</span><br><span class="hljs-type">int</span> <span class="hljs-variable">a1</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">b1</span> <span class="hljs-operator">=</span> ++a1;<br>System.out.println(<span class="hljs-string">&quot;a1 = &quot;</span>+ a1 + <span class="hljs-string">&quot;,b1 = &quot;</span> + b1);<br><br><span class="hljs-type">int</span> <span class="hljs-variable">a2</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">b2</span> <span class="hljs-operator">=</span> a2++;<br>System.out.println(<span class="hljs-string">&quot;a2 = &quot;</span>+ a2 + <span class="hljs-string">&quot;,b2 = &quot;</span> + b2);<br><br><span class="hljs-comment">//（前）--:先自减一，后运算</span><br><span class="hljs-comment">//（后）--：先运算，后自减一</span><br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><p>当”&#x3D;”两侧数据类型不一致的时候，可以使用自动类型转换或使用强制类型转换原则进行处理</p><p>扩展赋值运算符：+&#x3D;，-&#x3D;，*&#x3D;，&#x2F;&#x3D;，%&#x3D;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment">运算符之二：赋值运算符</span><br><span class="hljs-comment">= += -= *= /= %= //不会改变数据类型</span><br><span class="hljs-comment">*/</span><br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">SetValueTest</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br><span class="hljs-comment">//赋值符号： =</span><br><span class="hljs-type">int</span> <span class="hljs-variable">j1</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">i1</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br><br><span class="hljs-type">int</span> i2,j2;<br><span class="hljs-comment">//连续赋值</span><br>i2 = j2 = <span class="hljs-number">10</span>;<br><br><span class="hljs-comment">//**************************</span><br><span class="hljs-type">int</span> <span class="hljs-variable">num1</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br>num1 +=<span class="hljs-number">2</span>;<br>System.out.println(num1);<span class="hljs-comment">//12</span><br><br><span class="hljs-type">short</span> <span class="hljs-variable">s1</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br><span class="hljs-comment">//s1 = s1 + 2;//编译失败</span><br>s1 += <span class="hljs-number">2</span>;<span class="hljs-comment">//不会改变数据类型</span><br><br><br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20220623101016943.png" alt="image-20220623101016943"></p><p>比较运算的结果都是boolean型，也就是要么是true，要么是false。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment">运算符之三：比较运算符</span><br><span class="hljs-comment">== != &gt; &lt; &gt;= &lt;= instanceof</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">CompareTest</span> &#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br><span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> <span class="hljs-number">20</span>;<br><br>System.out.println(i == j);<br>System.out.println(i = j);<br><br><br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20220623101516987.png" alt="image-20220623101516987"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment">运算符之四：逻辑运算符</span><br><span class="hljs-comment">&amp; &amp;&amp; | || ! ^</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">说明：</span><br><span class="hljs-comment">1.逻辑运算符操作的都是boolean类型的变量</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">class</span>  <span class="hljs-title class_">LogicTest</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br><span class="hljs-comment">//区分&amp; 和&amp;&amp;</span><br><span class="hljs-comment">//相同点，运算结果相同</span><br><span class="hljs-comment">//相同的2：当符号左边是true时，二者都会执行符号右边的运算</span><br><span class="hljs-comment">//不同点：当符号左边是false时，&amp;继续执行，&amp;&amp;不再执行右边运算</span><br><span class="hljs-type">boolean</span> <span class="hljs-variable">b1</span> <span class="hljs-operator">=</span> <span class="hljs-literal">true</span>;<br>b1 = <span class="hljs-literal">false</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">num1</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br><span class="hljs-keyword">if</span>(b1 &amp; (num1++ &gt; <span class="hljs-number">0</span>))&#123;<br>System.out.println(<span class="hljs-string">&quot;我现在在北京&quot;</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>System.out.println(<span class="hljs-string">&quot;我现在在南京&quot;</span>);<br>&#125;<br>System.out.println(<span class="hljs-string">&quot;num1 = &quot;</span> + num1);<br><br><span class="hljs-type">boolean</span> <span class="hljs-variable">b2</span> <span class="hljs-operator">=</span> <span class="hljs-literal">true</span>;<br>b2 = <span class="hljs-literal">false</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">num2</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br><span class="hljs-keyword">if</span>(b1 &amp;&amp; (num2++ &gt; <span class="hljs-number">0</span>))&#123;<br>System.out.println(<span class="hljs-string">&quot;我现在在北京&quot;</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>System.out.println(<span class="hljs-string">&quot;我现在在南京&quot;</span>);<br>&#125;<br><br>System.out.println(<span class="hljs-string">&quot;num2 = &quot;</span> + num2);<br><span class="hljs-comment">// 区分 | 与 || </span><br><span class="hljs-comment">//相同点，运算结果相同</span><br><span class="hljs-comment">//相同的2：当符号左边是false时，二者都会执行符号右边的运算</span><br><span class="hljs-comment">//不同点：当符号左边是true时，|继续执行，||不再执行右边运算</span><br><span class="hljs-type">boolean</span> <span class="hljs-variable">b3</span> <span class="hljs-operator">=</span> <span class="hljs-literal">false</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">num3</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br><span class="hljs-keyword">if</span>(b3 | (num3++ &gt; <span class="hljs-number">0</span>))&#123;<br>System.out.println(<span class="hljs-string">&quot;我现在在北京&quot;</span>);<br>&#125;<span class="hljs-keyword">else</span> &#123;<br>System.out.println(<span class="hljs-string">&quot;我现在在南京&quot;</span>);<br>&#125;<br>System.out.println(<span class="hljs-string">&quot;num3 = &quot;</span> + num3);<br><br><span class="hljs-type">boolean</span> <span class="hljs-variable">b4</span> <span class="hljs-operator">=</span> <span class="hljs-literal">false</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">num4</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br><span class="hljs-keyword">if</span>(b4 || (num4++ &gt; <span class="hljs-number">0</span>))&#123;<br>System.out.println(<span class="hljs-string">&quot;我现在在北京&quot;</span>);<br>&#125;<span class="hljs-keyword">else</span> &#123;<br>System.out.println(<span class="hljs-string">&quot;我现在在南京&quot;</span>);<br>&#125;<br>System.out.println(<span class="hljs-string">&quot;num4 = &quot;</span> + num4);<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h3><p>位运算符是直接对整数的二进制的运算</p><p><img src="C:\Users\86187\AppData\Roaming\Typora\typora-user-images\image-20220623111103119.png" alt="image-20220623111103119"></p><p>左移运算和右移运算，二进制向左或者向右移动</p><p>每次向左移动一位，相当于变成原来的二倍</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment">运算符之五：位运算符（了解）</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">结论：</span><br><span class="hljs-comment">1. 位运算操作的都是整型变量</span><br><span class="hljs-comment">2. &lt;&lt; ：在一定范围内，每向左移一位：相当于 * 2</span><br><span class="hljs-comment">   &gt;&gt; : 在一定范围内，每向右移一位：相当于 / 2 </span><br><span class="hljs-comment"></span><br><span class="hljs-comment"> 面试题：最高效的计算2 * 8？ 2 &lt;&lt; 3 或 8 &lt;&lt; 1</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">BitTest</span> &#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br><span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">21</span>;<br>i = -<span class="hljs-number">21</span>;<br>System.out.println(<span class="hljs-string">&quot;i &lt;&lt; 2:&quot;</span> + (i &lt;&lt; <span class="hljs-number">2</span>));<br>System.out.println(<span class="hljs-string">&quot;i &lt;&lt; 27:&quot;</span> + (i &lt;&lt; <span class="hljs-number">27</span>));<br><br><br><br><span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> <span class="hljs-number">12</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> <span class="hljs-number">5</span>;<br>System.out.println(<span class="hljs-string">&quot;m % n :&quot;</span> + (m &amp; n));<br>System.out.println(<span class="hljs-string">&quot;m | n :&quot;</span> + (m | n));<br>System.out.println(<span class="hljs-string">&quot;m ^ n :&quot;</span> + (m ^ n));<br><br><span class="hljs-comment">//练习： 交换两个变量的值</span><br><span class="hljs-type">int</span> <span class="hljs-variable">num1</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">num2</span> <span class="hljs-operator">=</span> <span class="hljs-number">20</span>;<br>System.out.println(<span class="hljs-string">&quot;num1 = &quot;</span> + num1 + <span class="hljs-string">&quot;, num2 = &quot;</span> + num2 );<br><br><span class="hljs-comment">//方式一：定义临时变量 </span><br><span class="hljs-comment">//int temp = num1;</span><br><span class="hljs-comment">//num1 = num2;</span><br><span class="hljs-comment">//num2 = temp;</span><br><span class="hljs-comment">//System.out.println(&quot;num1 = &quot; + num1 + &quot;, num2 = &quot; + num2 );</span><br><br><span class="hljs-comment">//方式二：好处：不用定义临时变量</span><br><span class="hljs-comment">//弊端：①相加操作可能超出存储范围②有局限性：只能适用于数值类型</span><br><span class="hljs-comment">//num1 = num1 + num2;</span><br><span class="hljs-comment">//num2 = num1 - num2;</span><br><span class="hljs-comment">//num1 = num1 - num2;</span><br><span class="hljs-comment">//System.out.println(&quot;num1 = &quot; + num1 + &quot;, num2 = &quot; + num2 );</span><br><br><span class="hljs-comment">//方法三：使用位运算符</span><br><span class="hljs-comment">//有局限性：只能使用于数值型</span><br>num1 = num1 ^ num2;<br>num2 = num1 ^ num2;<br>num1 = num1 ^ num2;<br><br><br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h3><h4 id="格式："><a href="#格式：" class="headerlink" title="格式："></a>格式：</h4><p>​–&gt;(条件表达式)?表达式1:表达式2；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment">运算符之六：三元运算符(三目运算符)</span><br><span class="hljs-comment">1.结构:(条件表达式)?表达式1:表达式2;</span><br><span class="hljs-comment">2.说明：</span><br><span class="hljs-comment">①条件表达式的结果位boolean类型</span><br><span class="hljs-comment">②根据条件表达式真或假，决定执行表达式1，还是表达式2，</span><br><span class="hljs-comment">如果表达式为true，执行表达式1</span><br><span class="hljs-comment">如果表达式为false，执行表达式2</span><br><span class="hljs-comment">③表达式1和表达式2要求</span><br><span class="hljs-comment">3.凡是可以使用三元运算符的地方都可以改写成 if……else</span><br><span class="hljs-comment">反之不成立</span><br><span class="hljs-comment">4.如果程序既可以用三元运算符，又可以使用if-else，那么优先选择三元运算符</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">SanYuanTest</span> &#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br><span class="hljs-comment">//获取两个整数的较大值</span><br><span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> <span class="hljs-number">12</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> <span class="hljs-number">5</span>;<br><br><span class="hljs-type">int</span> <span class="hljs-variable">max</span> <span class="hljs-operator">=</span> (m &gt; n) ? m : n;<br>System.out.println(max);<br><br><span class="hljs-type">double</span> <span class="hljs-variable">num</span> <span class="hljs-operator">=</span> (m &gt; <span class="hljs-number">2</span>) ? <span class="hljs-number">2</span> : <span class="hljs-number">1.0</span>; <br><br><span class="hljs-comment">//*******************************</span><br><br><span class="hljs-type">String</span> <span class="hljs-variable">maxStr</span> <span class="hljs-operator">=</span> (m &gt; n) ? <span class="hljs-string">&quot;m大&quot;</span> : <span class="hljs-string">&quot;n大&quot;</span>;<br>System.out.println(maxStr);<br><br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="运算符的优先级"><a href="#运算符的优先级" class="headerlink" title="运算符的优先级"></a>运算符的优先级</h3><p>运算符有不同的优先级，所谓优先级就是表达式中运算符的运算顺序。如右表，上一行运算符总优先于下一行。</p><p>只有单目运算符、三元运算符、赋值运算符是从右往左运算的。</p>]]></content>
    
    
    <categories>
      
      <category>JavaStudy</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>day03--程序流程控制</title>
    <link href="/2022/06/25/day03--%E7%A8%8B%E5%BA%8F%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
    <url>/2022/06/25/day03--%E7%A8%8B%E5%BA%8F%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="day03"><a href="#day03" class="headerlink" title="day03"></a>day03</h1><h2 id="2-5程序流程控制"><a href="#2-5程序流程控制" class="headerlink" title="2-5程序流程控制"></a>2-5程序流程控制</h2><p>流程程序控制语句是用来控制程序中各语句执行顺序的语句，可以把语句组合成能完成一定功能的小逻辑模块</p><p>起流程控制方式采用结构化程序设计中规定的三种基本流程结构，即：</p><h3 id="顺序结构"><a href="#顺序结构" class="headerlink" title="顺序结构"></a>顺序结构</h3><p>​程序从上到下顺序执行</p><h3 id="分支结构"><a href="#分支结构" class="headerlink" title="分支结构"></a>分支结构</h3><p>​根据条件，选择性地执行某段代码；</p><p>​有if……else和switch……case</p><h3 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment">分支结构中地if-else（条件判断结构）</span><br><span class="hljs-comment">三种结构</span><br><span class="hljs-comment">第一种：</span><br><span class="hljs-comment">if（条件表达式）&#123;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">&#125;</span><br><span class="hljs-comment">第二种：</span><br><span class="hljs-comment">if（条件表达式）&#123;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">&#125;else&#123;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">&#125;</span><br><span class="hljs-comment">第三种：多选一</span><br><span class="hljs-comment">if（条件表达式）&#123;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">&#125;else if（条件表达式）&#123;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">&#125;</span><br><span class="hljs-comment">……</span><br><span class="hljs-comment">else&#123;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">&#125;</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">IfTest</span> &#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br><br><span class="hljs-comment">//举例1</span><br><span class="hljs-type">int</span> <span class="hljs-variable">heartBeats</span> <span class="hljs-operator">=</span> <span class="hljs-number">79</span>;<br><span class="hljs-keyword">if</span>(heartBeats &lt; <span class="hljs-number">60</span> || heartBeats &gt; <span class="hljs-number">100</span>)&#123;<br>System.out.println(<span class="hljs-string">&quot;需要做进一步检查&quot;</span>);<br>&#125;<br><br>System.out.println(<span class="hljs-string">&quot;检查结束&quot;</span>);<br><br><span class="hljs-comment">//举例2</span><br><span class="hljs-type">int</span> <span class="hljs-variable">age</span> <span class="hljs-operator">=</span> <span class="hljs-number">23</span>;<br><span class="hljs-keyword">if</span>(age&lt;<span class="hljs-number">18</span>)&#123;<br>System.out.println(<span class="hljs-string">&quot;你可以看动画片&quot;</span>);<br>&#125;<span class="hljs-keyword">else</span> &#123;<br>System.out.println(<span class="hljs-string">&quot;你可以看成人电影了&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">//举例3</span><br><span class="hljs-keyword">if</span>(age &lt; <span class="hljs-number">0</span>)&#123;<br>System.out.println(<span class="hljs-string">&quot;您输入的数据非法&quot;</span>);<br>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(age &lt; <span class="hljs-number">18</span>)&#123;<br>System.out.println(<span class="hljs-string">&quot;青少年时期&quot;</span>);<br>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(age &lt; <span class="hljs-number">35</span>)&#123;<br>System.out.println(<span class="hljs-string">&quot;青壮年时期&quot;</span>);<br>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(age &lt; <span class="hljs-number">60</span>)&#123;<br>System.out.println(<span class="hljs-string">&quot;中年时期&quot;</span>);<br>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(age &lt; <span class="hljs-number">120</span>)&#123;<br>System.out.println(<span class="hljs-string">&quot;老年时期&quot;</span>);<br>&#125;<span class="hljs-keyword">else</span> &#123;<br>System.out.println(<span class="hljs-string">&quot;你是要成仙啊&quot;</span>);<br>&#125;<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaStudy</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>day02</title>
    <link href="/2022/06/25/day02/"/>
    <url>/2022/06/25/day02/</url>
    
    <content type="html"><![CDATA[<h1 id="day02"><a href="#day02" class="headerlink" title="day02"></a>day02</h1><h2 id="1、关键字和保留字"><a href="#1、关键字和保留字" class="headerlink" title="1、关键字和保留字"></a>1、关键字和保留字</h2><p>定义：被java语言赋予了特殊含义，用做专门用途的字符串(单词)</p><p>特点：关键字中所有字母都为小写</p><p>java保留字:现有的java版本尚未使用，但以后版本可能会作为关键字使用</p><h2 id="2、标识符-Identifier"><a href="#2、标识符-Identifier" class="headerlink" title="2、标识符(Identifier)"></a>2、标识符(Identifier)</h2><p>java对各种变量、方法和类等要素命名时使用的字符序列称为标识符</p><p>技巧:凡是自己可以起名字的地方都叫标识符 </p><p>标识符的命名规则: –&gt;如果不遵守如下规则，编译不能通过<br>由26个英文字母大小写，0-9，或特殊符合组成<br>数字不能开头<br>不可以使用关键字保留字，但能包含关键字和保留字<br>java严格区分大小写，但长度无限制<br>标识符不能包含空格</p><p>命名规范：</p><p>包名：多单词组成时所有字母都小写：xxxyyyyzzz</p><p>类名、接口名：多单词组成时，所有单词的首字母大写：XxxYyyZzz</p><p>变量名、方法名：多单词组成时，第一个单词首字母小写，第二个单词开始每个单词首字母大写：xxxYyyZzz</p><p>常量名：所有字母都大写，多单词时每个单词都用下划线连接xxx_yyy_zzz</p><p>注意：</p><p>命名：“见名知意”</p><p>java采用unicode字符集，因此标识符也可以用汉字声明，但是不建议使用</p><h2 id="3、变量"><a href="#3、变量" class="headerlink" title="3、变量"></a>3、变量</h2><h3 id="变量的概念："><a href="#变量的概念：" class="headerlink" title="变量的概念："></a>变量的概念：</h3><p>​内存中一个存储区域</p><p>​该区域的数据可以在同一类范围内不断变化</p><p>​变量是程序中最基本的存储单元，包含变量类型、变量名和存储的值</p><h3 id="变量的作用："><a href="#变量的作用：" class="headerlink" title="变量的作用："></a>变量的作用：</h3><p>​用于在内存中保存数据</p><h3 id="使用变量注意："><a href="#使用变量注意：" class="headerlink" title="使用变量注意："></a>使用变量注意：</h3><p>​java中每个变量必须先声明，后使用</p><p>​使用变量名来访问这块区域的数据</p><p>​变量的作用域：其定义所在的一对{}内</p><p>​变量只有在其作用域内才有效</p><p>​同一个作用域内，不能定义重名的变量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment">变量的使用</span><br><span class="hljs-comment">1.java定义变量的格式：数据类型 变量名 = 变量值;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">2.说明：</span><br><span class="hljs-comment">变量必须先声明，并且赋值，才能使用</span><br><span class="hljs-comment">变量都定义在其作用域内，在作用域内，它是有效的，换句话说出了作用域，就失效了</span><br><span class="hljs-comment">同一个作用域内，不可以声明两个同名的变量</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">VariableTest</span> &#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br><br><span class="hljs-comment">// 变量的定义</span><br><span class="hljs-type">int</span> <span class="hljs-variable">myAge</span> <span class="hljs-operator">=</span> <span class="hljs-number">12</span>;<br><br><span class="hljs-comment">// 变量的使用</span><br>System.out.println(myAge);<br><br><span class="hljs-comment">//变量的声明</span><br><span class="hljs-type">int</span> myNumber;<br><br><span class="hljs-comment">//变量的赋值</span><br>myNumber = <span class="hljs-number">1001</span>;<br>System.out.println(myNumber);<br><span class="hljs-comment">//编译不通过</span><br><span class="hljs-comment">//System.out.println(myClass);</span><br><br><span class="hljs-comment">//不可以在同一个作用域内定义同名变量</span><br><span class="hljs-comment">//int myAge = 22;</span><br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">method</span><span class="hljs-params">()</span>&#123;<br><span class="hljs-type">int</span> <span class="hljs-variable">myClass</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="java定义的数据类型"><a href="#java定义的数据类型" class="headerlink" title="java定义的数据类型"></a>java定义的数据类型</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment">java定义的数据类型</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">一、变量按照数据类型来分：</span><br><span class="hljs-comment">基本数据类型：</span><br><span class="hljs-comment">整形：byte(1字节 = 8bit) \ sort(2字节) \ int(4字节) \ long(8字节)</span><br><span class="hljs-comment">浮点型：float \ double</span><br><span class="hljs-comment">字符型：char</span><br><span class="hljs-comment">布尔型：boolean</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">引用数据类型：</span><br><span class="hljs-comment">类(class)</span><br><span class="hljs-comment">接口(interface)</span><br><span class="hljs-comment">数组(array)</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">二、变量在类中声明的位置:</span><br><span class="hljs-comment">成员变量 vs 局部变量</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">VariableTest1</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br><span class="hljs-comment">//1.整形：byte(1字节 = 8bit) \ sort(2字节) \ int(4字节) \ long(8字节)</span><br><span class="hljs-type">byte</span> <span class="hljs-variable">b1</span> <span class="hljs-operator">=</span> <span class="hljs-number">12</span>;<br><span class="hljs-type">byte</span> <span class="hljs-variable">b2</span> <span class="hljs-operator">=</span> -<span class="hljs-number">128</span>;<br>System.out.println(b1);<br>System.out.println(b2);<br><span class="hljs-comment">// 2 声明long型变量，必须以“l”或“L”结尾</span><br><span class="hljs-comment">//通常定义整形变量使用int型</span><br><span class="hljs-type">short</span> <span class="hljs-variable">s1</span> <span class="hljs-operator">=</span> <span class="hljs-number">1287</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">i1</span> <span class="hljs-operator">=</span> <span class="hljs-number">1234</span>;<br><span class="hljs-type">long</span> <span class="hljs-variable">l1</span> <span class="hljs-operator">=</span> <span class="hljs-number">32456431L</span>;<br>System.out.println(l1);<br><br><span class="hljs-comment">//浮点型：float(4个字节) \ double(8个字节)</span><br><span class="hljs-comment">//浮点型，表示带小数点的数据 </span><br><span class="hljs-comment">//float表示数值的范围比long还大</span><br><br><span class="hljs-type">double</span> <span class="hljs-variable">d1</span> <span class="hljs-operator">=</span> <span class="hljs-number">123.3</span>;<br>System.out.println(d1+<span class="hljs-number">1</span>);<br><span class="hljs-comment">//定义float类型变量时，变量要以&quot;f&quot;或&quot;F&quot;结尾</span><br><span class="hljs-type">float</span> <span class="hljs-variable">f1</span> <span class="hljs-operator">=</span> <span class="hljs-number">12.3f</span>;<br>System.out.println(f1);<br><span class="hljs-comment">//通常，定义浮点型变量时，使用double型。</span><br><br><span class="hljs-comment">//字符型：char(1字符 = 2字节)</span><br><span class="hljs-comment">//定义char型变量，通常使用一对&#x27;&#x27;内部只能写一个字符</span><br><span class="hljs-type">char</span> <span class="hljs-variable">c1</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;a&#x27;</span>;<br><br><span class="hljs-comment">//编译不通过</span><br><span class="hljs-comment">//c1 = &#x27;AB&#x27;</span><br>System.out.println(c1);<br><br><span class="hljs-type">char</span> <span class="hljs-variable">c2</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;1&#x27;</span>;<br><span class="hljs-type">char</span> <span class="hljs-variable">c3</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;中&#x27;</span>;<br>System.out.println(c2);<br>System.out.println(c3);<br><br><span class="hljs-comment">//表示方式：1.声明一个字符 2.转义字符 3.直接使用Unicode值来表示字符型常量</span><br><br><span class="hljs-type">char</span> <span class="hljs-variable">c5</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;\n&#x27;</span>;<span class="hljs-comment">//换行符</span><br>c5 = <span class="hljs-string">&#x27;\t&#x27;</span>;<br>System.out.print(<span class="hljs-string">&quot;hello&quot;</span> + c5);<br>System.out.println(<span class="hljs-string">&quot;world&quot;</span>);<br><br><span class="hljs-type">char</span> <span class="hljs-variable">c6</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;\uu0043&#x27;</span>;<br>System.out.println(c6);<br><br><span class="hljs-comment">//布尔类型：boolean</span><br><span class="hljs-comment">// 只能取两个值</span><br><span class="hljs-type">boolean</span> <span class="hljs-variable">bb1</span> <span class="hljs-operator">=</span> <span class="hljs-literal">true</span>;<br>System.out.println(bb1);<br><br><span class="hljs-type">boolean</span> <span class="hljs-variable">isMarried</span> <span class="hljs-operator">=</span> <span class="hljs-literal">true</span>;<br><span class="hljs-keyword">if</span>(isMarried)&#123;<br>System.out.println(<span class="hljs-string">&quot;你就不能参加单身party！\\n 很遗憾！&quot;</span>);<br>&#125;<span class="hljs-keyword">else</span> &#123;<br>System.out.println(<span class="hljs-string">&quot;你可以多谈谈女朋友&quot;</span>);<br>&#125;<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="基本数据类型之间的运算规则："><a href="#基本数据类型之间的运算规则：" class="headerlink" title="基本数据类型之间的运算规则："></a>基本数据类型之间的运算规则：</h3><h4 id="自动类型提升："><a href="#自动类型提升：" class="headerlink" title="自动类型提升："></a>自动类型提升：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment">基本数据类型之间的运算规则：</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">前提：这里讨论的只是7钟数据类型变量间的运算，不包含boolean类型的</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">1.自动类型提升：</span><br><span class="hljs-comment">结论：当容量小的数据类型的变量与容量大的数据类型的变量做运算时，结果自动提升为容量大的数据类型</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">byte 、 char 、 short --&gt;long --&gt; float --&gt; double</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">特别的：当byte、char、short三种类型的变量做运算时结果为int类型</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">2.强制类型转换：</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">说明：此时的容量大小指的是，表示数的范围的大和小。比如：float容量要大于long的容量</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">VariableTest2</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br><span class="hljs-type">byte</span> <span class="hljs-variable">b1</span> <span class="hljs-operator">=</span> <span class="hljs-number">2</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">i1</span> <span class="hljs-operator">=</span> <span class="hljs-number">12</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">i2</span> <span class="hljs-operator">=</span> b1 + i1;<br>System.out.println(i2);<br><br><span class="hljs-type">float</span> <span class="hljs-variable">f</span> <span class="hljs-operator">=</span> b1 + i1;<br>System.out.println(f);<br><br><span class="hljs-type">short</span> <span class="hljs-variable">s1</span> <span class="hljs-operator">=</span> <span class="hljs-number">123</span>;<br><span class="hljs-type">double</span> <span class="hljs-variable">d1</span> <span class="hljs-operator">=</span> s1;<br>System.out.println(d1);<br><br><span class="hljs-comment">//************************</span><br><span class="hljs-type">char</span> <span class="hljs-variable">c1</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;a&#x27;</span>;<span class="hljs-comment">//97</span><br><span class="hljs-type">int</span> <span class="hljs-variable">i3</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">i4</span> <span class="hljs-operator">=</span> c1 + i3;<br>System.out.println(i4);<br><br><span class="hljs-type">short</span> <span class="hljs-variable">s2</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br><span class="hljs-comment">//short s3 = c1 + s2;//编译不通过</span><br><br><span class="hljs-type">byte</span> <span class="hljs-variable">b2</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br><span class="hljs-type">char</span> <span class="hljs-variable">c3</span> <span class="hljs-operator">=</span> c1 + b2;<br><br><span class="hljs-comment">//************************</span><br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="强制类型转换："><a href="#强制类型转换：" class="headerlink" title="强制类型转换："></a>强制类型转换：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment">强制类型转换：自动类型提升运算的逆运算</span><br><span class="hljs-comment">1.需要使用强转符：()</span><br><span class="hljs-comment">2.注意点：强制类型转换，可能导致精度损失。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">VariableTest3</span> &#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br><span class="hljs-type">double</span> <span class="hljs-variable">d1</span> <span class="hljs-operator">=</span> <span class="hljs-number">12.3</span>;<br><br><span class="hljs-type">int</span> <span class="hljs-variable">i1</span> <span class="hljs-operator">=</span> (<span class="hljs-type">int</span>)d1;<span class="hljs-comment">//截断操作</span><br>System.out.println(i1);<br><br><span class="hljs-comment">//没有精度损失</span><br><span class="hljs-type">long</span> <span class="hljs-variable">l1</span> <span class="hljs-operator">=</span> <span class="hljs-number">123</span>;<br><span class="hljs-type">short</span> <span class="hljs-variable">s2</span> <span class="hljs-operator">=</span> (<span class="hljs-type">short</span>)l1;<br><br><span class="hljs-type">int</span> <span class="hljs-variable">i2</span> <span class="hljs-operator">=</span> <span class="hljs-number">128</span>;<br><span class="hljs-type">byte</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> (<span class="hljs-type">byte</span>)i2;<br>System.out.println(b);<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="变量运算规则："><a href="#变量运算规则：" class="headerlink" title="变量运算规则："></a>变量运算规则：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">VariableTest4</span> &#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br><span class="hljs-comment">//1.编码情况</span><br><span class="hljs-type">long</span> <span class="hljs-variable">l</span> <span class="hljs-operator">=</span> <span class="hljs-number">12313</span>;<br>System.out.println(l);<br><span class="hljs-comment">//过大的整数</span><br><span class="hljs-comment">//long l1 = 1321564631315;</span><br><span class="hljs-type">long</span> <span class="hljs-variable">l1</span> <span class="hljs-operator">=</span> <span class="hljs-number">1321564631315L</span>;<br><br><span class="hljs-comment">//******************</span><br><br><span class="hljs-comment">//编译失败</span><br><span class="hljs-comment">//float f1 = 12.3;</span><br><br><span class="hljs-comment">//2.编码情况2：</span><br><span class="hljs-comment">//整形常量，默认类型为int型</span><br><span class="hljs-comment">//浮点型常量，默认类型为double型</span><br><span class="hljs-type">byte</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> <span class="hljs-number">12</span>;<br><span class="hljs-comment">//byte b1 = b + 1;//编译失败</span><br><br><span class="hljs-comment">//float f1 = b + 12.3;//编译失败</span><br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="字符串类型：String"><a href="#字符串类型：String" class="headerlink" title="字符串类型：String"></a>字符串类型：String</h3><p>String不是基本数据类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment">String类型变量的使用</span><br><span class="hljs-comment">1.String属于引用数据类型,翻译为：字符串</span><br><span class="hljs-comment">2.声明String类型变量时，使用一对&quot;&quot;</span><br><span class="hljs-comment">3.String可以和8种基本数据类型变量做运算，且运算只能是连接运算：+</span><br><span class="hljs-comment">4.运算的结果仍然是String类型</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">StringTest</span> &#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br><br><span class="hljs-type">String</span> <span class="hljs-variable">s1</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;Hello World!&quot;</span>;<br><br>System.out.println(s1);<br><span class="hljs-comment">//*********************</span><br><span class="hljs-type">int</span> <span class="hljs-variable">number</span> <span class="hljs-operator">=</span> <span class="hljs-number">1001</span>;<br><span class="hljs-type">String</span> <span class="hljs-variable">numberStr</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;学号&quot;</span>;<br><span class="hljs-type">String</span> <span class="hljs-variable">info</span> <span class="hljs-operator">=</span> numberStr + number;<span class="hljs-comment">//&#x27;+&#x27;连接运算</span><br><span class="hljs-type">boolean</span> <span class="hljs-variable">b1</span> <span class="hljs-operator">=</span> <span class="hljs-literal">true</span>;<br><span class="hljs-type">String</span> <span class="hljs-variable">info1</span> <span class="hljs-operator">=</span> info + b1;<br>System.out.println(info1);<br><br><span class="hljs-comment">//练习1</span><br><span class="hljs-type">char</span> <span class="hljs-variable">c</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;a&#x27;</span>;<span class="hljs-comment">//&#x27;a&#x27;97 A:65</span><br><span class="hljs-type">int</span> <span class="hljs-variable">num</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br><span class="hljs-type">String</span> <span class="hljs-variable">str</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;hello&quot;</span>;<br>System.out.println(c + num + str);<br>System.out.println(c + str + num);<br>System.out.println(c + (str + num));<br>System.out.println((c + str) + num);<br><br><span class="hljs-comment">//练习2</span><br><span class="hljs-comment">//**</span><br>System.out.println(<span class="hljs-string">&#x27;*&#x27;</span> + <span class="hljs-string">&#x27;\t&#x27;</span> + <span class="hljs-string">&#x27;*&#x27;</span>);<br><br><br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="进制与进制的转换"><a href="#进制与进制的转换" class="headerlink" title="进制与进制的转换"></a>进制与进制的转换</h3><p>​世界上有10种人，认识和不认识二进制的</p><h4 id="关于进制"><a href="#关于进制" class="headerlink" title="关于进制"></a>关于进制</h4><p>​所有数字在计算机都是二进制形式存在的。</p><p>​对于整数，有四种表示方式:</p><p>​二进制 0，1，满二进一，以0b或0B开头。</p><p>​十进制 </p><p>​八进制 0-7，满八进一，以数字0开头</p><p>​十六进制 0-9和A-F，满16进1，以0x或0X开头表示，此处的A-F不区分大小写。</p><p>​如：0x21AF + 1 &#x3D;0x21B0</p><table><thead><tr><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>1</th><th>1</th><th>0</th></tr></thead></table><p>0：正数</p><p>1：负数</p><table><thead><tr><th>0</th><th>0</th><th>0</th><th>0</th><th>1</th><th>1</th><th>1</th><th>0</th></tr></thead></table><table><thead><tr><th>1</th><th>0</th><th>0</th><th>0</th><th>1</th><th>1</th><th>1</th><th>0</th></tr></thead></table><p>-14的原码                                                         除了符号位，各个位取反</p><table><thead><tr><th>1</th><th>1</th><th>1</th><th>1</th><th>0</th><th>0</th><th>0</th><th>1</th></tr></thead></table><p>-14的反码                                                        反码+1</p><table><thead><tr><th>1</th><th>1</th><th>1</th><th>1</th><th>0</th><th>0</th><th>1</th><th>0</th></tr></thead></table><p>-14的补码</p><p>在计算机的底层都以补码的形式存储数据</p><p>十进制–&gt;二进制：除2取余的逆 </p><p>二进制–&gt;八进制：3个一位</p><p>二进制–&gt;十六进制：4个一位</p><h2 id="4、运算符"><a href="#4、运算符" class="headerlink" title="4、运算符"></a>4、运算符</h2><h2 id="5、程序流程控制"><a href="#5、程序流程控制" class="headerlink" title="5、程序流程控制"></a>5、程序流程控制</h2>]]></content>
    
    
    <categories>
      
      <category>JavaStudy</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建个人博客</title>
    <link href="/2022/06/25/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo/"/>
    <url>/2022/06/25/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo/</url>
    
    <content type="html"><![CDATA[<p>：</p><p>经过两天一夜的时间个人博客终于搭建出来了，这里是记录了一下踩坑的解决方案</p><h1 id="搭建个人博客hexo"><a href="#搭建个人博客hexo" class="headerlink" title="搭建个人博客hexo"></a>搭建个人博客hexo</h1><p>首先安装nodejs</p><p>window在终端下输入</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">npm install -g cnpm --registry=https:<span class="hljs-regexp">//</span>registry.npm.taobao.org<br></code></pre></td></tr></table></figure><p>切换成淘宝镜像源</p><h2 id="报错解决方案："><a href="#报错解决方案：" class="headerlink" title="报错解决方案："></a>报错解决方案：</h2><p>用管理员身份运行命令提示符</p><p><a href="https://blog.csdn.net/XiYoung_Miracle/article/details/102969346?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165604924416781483737237%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=165604924416781483737237&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~pc_rank_34-2-102969346-null-null.142%5Ev21%5Epc_rank_34,157%5Ev15%5Enew_3&utm_term=cnpm+%E4%B8%8D%E6%98%AF%E5%86%85%E9%83%A8%E6%88%96%E5%A4%96%E9%83%A8%E5%91%BD%E4%BB%A4%EF%BC%8C%E4%B9%9F%E4%B8%8D%E6%98%AF%E5%8F%AF%E8%BF%90%E8%A1%8C%E7%9A%84%E7%A8%8B%E5%BA%8F&spm=1018.2226.3001.4187">然后点击这里</a></p><p>之后再运行</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">cnpm install -g hexo-<span class="hljs-keyword">cli</span><br></code></pre></td></tr></table></figure><p>安装完成后可以用</p><p>在git bash里面输入</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo -v</span><br></code></pre></td></tr></table></figure><p>来验证</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">chdir<span class="hljs-regexp">//</span>看路径<br></code></pre></td></tr></table></figure><p>继续输入</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">hexo <span class="hljs-keyword">init</span><br></code></pre></td></tr></table></figure><p>如果报错</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">INFO</span>  Cloning hexo-starter https://github.com/hexojs/hexo-starter.git<br>fatal: unable <span class="hljs-keyword">to</span> <span class="hljs-keyword">access</span> <span class="hljs-string">&#x27;https://github.com/hexojs/hexo-starter.git/&#x27;</span>: Failed <span class="hljs-keyword">to</span> <span class="hljs-keyword">connect</span> <span class="hljs-keyword">to</span> github.com port <span class="hljs-number">443</span> <span class="hljs-keyword">after</span> <span class="hljs-number">21100</span> ms: Timed <span class="hljs-keyword">out</span><br>WARN  git clone failed. Copying data <span class="hljs-keyword">instead</span><br>FATAL &#123;<br>  err: [Error: EPERM: operation <span class="hljs-keyword">not</span> permitted, mkdir <span class="hljs-string">&#x27;D:\&#x27;</span>] &#123;<br>    errno: <span class="hljs-number">-4048</span>,<br>    code: <span class="hljs-string">&#x27;EPERM&#x27;</span>,<br>    syscall: <span class="hljs-string">&#x27;mkdir&#x27;</span>,<br>    <span class="hljs-type">path</span>: <span class="hljs-string">&#x27;D:\\&#x27;</span><br>  &#125;<br>&#125; Something<span class="hljs-string">&#x27;s wrong. Maybe you can find the solution here: %s http://hexo.io/docs/troubleshooting.html</span><br></code></pre></td></tr></table></figure><p>搭个梯子就好了</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">hexo s<span class="hljs-regexp">//</span>启动命令<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">hexo n <span class="hljs-string">&quot;我的第一篇博客文章&quot;</span><span class="hljs-regexp">//</span>生成 <br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">hexo clean<span class="hljs-regexp">//</span>清理<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">hexo g<span class="hljs-regexp">//</span>生成<br></code></pre></td></tr></table></figure><p>有用的博客</p><p><a href="https://blog.csdn.net/weixin_44237337/article/details/119994618?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=Failed%20to%20install%20dependencies&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-119994618.142%5Ev21%5Epc_rank_34,157%5Ev15%5Enew_3&amp;spm=1018.2226.3001.4187">https://blog.csdn.net/weixin_44237337/article/details/119994618?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=Failed%20to%20install%20dependencies&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-119994618.142^v21^pc_rank_34,157^v15^new_3&amp;spm=1018.2226.3001.4187</a></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/litten/</span>hexo-theme-yilia.git themes/yilia<br></code></pre></td></tr></table></figure><p>node -v#查看node版本<br>npm -v#查看npm版本<br>npm install -g cnpm –registry&#x3D;<a href="http://registry.npm.taobao.org/">http://registry.npm.taobao.org</a>#安装淘宝的cnpm 管理器<br>cnpm -v#查看cnpm版本<br>cnpm install -g hexo-cli    #安装hexo框架<br>hexo -v#查看hexo版本<br>mkdir blog#创建blog目录<br>cd blog #进入blog目录<br>sudo hexo init #生成博客 初始化博客<br>hexo s#启动本地博客服务<br><a href="http://localhost:4000/">http://localhost:4000/</a>#本地访问地址<br>hexo n “我的第一篇文章” #创建新的文章<br>#返回blog目录<br>hexo clean #清理<br>hexo g #生成<br>#Github创建一个新的仓库 YourGithubName.github.io<br>cnpm install –save hexo-deployer-git #在blog目录下安装git部署插件<br>-—<br>#配置_config.yml<br>-—-<br>    # Deployment<br>    ## Docs: <a href="https://hexo.io/docs/deployment.html">https://hexo.io/docs/deployment.html</a><br>​deploy:<br>          type: git<br>         repo: <a href="https://github.com/YourGithubName/YourGithubName.github.io.git">https://github.com/YourGithubName/YourGithubName.github.io.git</a><br>          branch: master<br>-—-<br>hexo d#部署到Github仓库里<br><a href="https://yourgithubname.github.io/">https://YourGithubName.github.io/</a>  #访问这个地址可以查看博客</p><p> git clone <a href="https://github.com/litten/hexo-theme-yilia.git">https://github.com/litten/hexo-theme-yilia.git</a> themes&#x2F;yilia  #下载yilia主题到本地</p><p>#修改hexo根目录下的 _config.yml 文件 ： theme: yilia</p><p>hexo c#清理一下<br>hexo g#生成<br>hexo d#部署到远程Github仓库<br><a href="https://yourgithubname.github.io/">https://YourGithubName.github.io/</a>  #查看博客</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/chenzengguang520/</span>chenzengguang520.github.io.git<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>chenzengguang520.github.io/<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/litten/</span>hexo-theme-yilia.git themes/yilia<br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">文章标题</span><br><span class="hljs-attr">tags:</span> [<span class="hljs-string">Hexo</span>, <span class="hljs-string">Fluid</span>]<br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/img/example.jpg</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2019-10-10 10:00:00</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">以下是文章内容</span><br></code></pre></td></tr></table></figure><h3 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs markdown">正文<br><br><span class="hljs-section">## 参考</span><br>[<span class="hljs-symbol">^1</span>]: <span class="hljs-link">参考资料1</span><br>[<span class="hljs-symbol">^2</span>]: <span class="hljs-link">参考资料2</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>生活</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
